matches the snapshot:
  1: |
    raw: |2
      cert-manager v1.15.0 has been deployed successfully!

      In order to begin issuing certificates, you will need to set up a ClusterIssuer
      or Issuer resource (for example, by creating a 'letsencrypt-staging' issuer).

      More information on the different types of issuers and how to configure them
      can be found in our documentation:

      https://cert-manager.io/docs/configuration/

      For information on how to configure cert-manager to automatically provision
      Certificates for Ingress resources, take a look at the `ingress-shim`
      documentation:

      https://cert-manager.io/docs/usage/ingress/
  2: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-cainjector
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/component: cainjector
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: cainjector
      template:
        metadata:
          labels:
            app: cainjector
            app.kubernetes.io/component: cainjector
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: cainjector
            app.kubernetes.io/version: v1.15.0
            helm.sh/chart: cert-manager-1.2.3
        spec:
          containers:
            - args:
                - --v=2
                - --leader-election-namespace=kube-system
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              image: quay.io/jetstack/cert-manager-cainjector:v1.15.0
              imagePullPolicy: IfNotPresent
              name: cert-manager-cainjector
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
          enableServiceLinks: false
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: RELEASE-NAME-cert-manager-cainjector
  3: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-cainjector
    rules:
      - apiGroups:
          - cert-manager.io
        resources:
          - certificates
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - get
          - create
          - update
          - patch
      - apiGroups:
          - admissionregistration.k8s.io
        resources:
          - validatingwebhookconfigurations
          - mutatingwebhookconfigurations
        verbs:
          - get
          - list
          - watch
          - update
          - patch
      - apiGroups:
          - apiregistration.k8s.io
        resources:
          - apiservices
        verbs:
          - get
          - list
          - watch
          - update
          - patch
      - apiGroups:
          - apiextensions.k8s.io
        resources:
          - customresourcedefinitions
        verbs:
          - get
          - list
          - watch
          - update
          - patch
  4: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-cainjector
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-cert-manager-cainjector
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-cert-manager-cainjector
        namespace: NAMESPACE
  5: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-cainjector:leaderelection
      namespace: kube-system
    rules:
      - apiGroups:
          - coordination.k8s.io
        resourceNames:
          - cert-manager-cainjector-leader-election
          - cert-manager-cainjector-leader-election-core
        resources:
          - leases
        verbs:
          - get
          - update
          - patch
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - create
  6: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-cainjector:leaderelection
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: RELEASE-NAME-cert-manager-cainjector:leaderelection
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-cert-manager-cainjector
        namespace: NAMESPACE
  7: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-cainjector
      namespace: NAMESPACE
  8: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: cert-manager
      template:
        metadata:
          annotations:
            prometheus.io/path: /metrics
            prometheus.io/port: "9402"
            prometheus.io/scrape: "true"
          labels:
            app: cert-manager
            app.kubernetes.io/component: controller
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: cert-manager
            app.kubernetes.io/version: v1.15.0
            helm.sh/chart: cert-manager-1.2.3
        spec:
          containers:
            - args:
                - --v=2
                - --cluster-resource-namespace=$(POD_NAMESPACE)
                - --leader-election-namespace=kube-system
                - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.15.0
                - --max-concurrent-challenges=60
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              image: quay.io/jetstack/cert-manager-controller:v1.15.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 8
                httpGet:
                  path: /livez
                  port: http-healthz
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 15
              name: cert-manager-controller
              ports:
                - containerPort: 9402
                  name: http-metrics
                  protocol: TCP
                - containerPort: 9403
                  name: http-healthz
                  protocol: TCP
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
          enableServiceLinks: false
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: RELEASE-NAME-cert-manager
  9: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager:leaderelection
      namespace: kube-system
    rules:
      - apiGroups:
          - coordination.k8s.io
        resourceNames:
          - cert-manager-controller
        resources:
          - leases
        verbs:
          - get
          - update
          - patch
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - create
  10: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager:leaderelection
      namespace: kube-system
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: RELEASE-NAME-cert-manager:leaderelection
    subjects:
      - apiGroup: ""
        kind: ServiceAccount
        name: RELEASE-NAME-cert-manager
        namespace: NAMESPACE
  11: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-issuers
    rules:
      - apiGroups:
          - cert-manager.io
        resources:
          - issuers
          - issuers/status
        verbs:
          - update
          - patch
      - apiGroups:
          - cert-manager.io
        resources:
          - issuers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
          - patch
  12: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-clusterissuers
    rules:
      - apiGroups:
          - cert-manager.io
        resources:
          - clusterissuers
          - clusterissuers/status
        verbs:
          - update
          - patch
      - apiGroups:
          - cert-manager.io
        resources:
          - clusterissuers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
          - patch
  13: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-certificates
    rules:
      - apiGroups:
          - cert-manager.io
        resources:
          - certificates
          - certificates/status
          - certificaterequests
          - certificaterequests/status
        verbs:
          - update
          - patch
      - apiGroups:
          - cert-manager.io
        resources:
          - certificates
          - certificaterequests
          - clusterissuers
          - issuers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - cert-manager.io
        resources:
          - certificates/finalizers
          - certificaterequests/finalizers
        verbs:
          - update
      - apiGroups:
          - acme.cert-manager.io
        resources:
          - orders
        verbs:
          - create
          - delete
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
          - patch
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
          - patch
  14: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-orders
    rules:
      - apiGroups:
          - acme.cert-manager.io
        resources:
          - orders
          - orders/status
        verbs:
          - update
          - patch
      - apiGroups:
          - acme.cert-manager.io
        resources:
          - orders
          - challenges
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - cert-manager.io
        resources:
          - clusterissuers
          - issuers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - acme.cert-manager.io
        resources:
          - challenges
        verbs:
          - create
          - delete
      - apiGroups:
          - acme.cert-manager.io
        resources:
          - orders/finalizers
        verbs:
          - update
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
          - patch
  15: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-challenges
    rules:
      - apiGroups:
          - acme.cert-manager.io
        resources:
          - challenges
          - challenges/status
        verbs:
          - update
          - patch
      - apiGroups:
          - acme.cert-manager.io
        resources:
          - challenges
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - cert-manager.io
        resources:
          - issuers
          - clusterissuers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
          - patch
      - apiGroups:
          - ""
        resources:
          - pods
          - services
        verbs:
          - get
          - list
          - watch
          - create
          - delete
      - apiGroups:
          - networking.k8s.io
        resources:
          - ingresses
        verbs:
          - get
          - list
          - watch
          - create
          - delete
          - update
      - apiGroups:
          - gateway.networking.k8s.io
        resources:
          - httproutes
        verbs:
          - get
          - list
          - watch
          - create
          - delete
          - update
      - apiGroups:
          - route.openshift.io
        resources:
          - routes/custom-host
        verbs:
          - create
      - apiGroups:
          - acme.cert-manager.io
        resources:
          - challenges/finalizers
        verbs:
          - update
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - get
          - list
          - watch
  16: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-ingress-shim
    rules:
      - apiGroups:
          - cert-manager.io
        resources:
          - certificates
          - certificaterequests
        verbs:
          - create
          - update
          - delete
      - apiGroups:
          - cert-manager.io
        resources:
          - certificates
          - certificaterequests
          - issuers
          - clusterissuers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - networking.k8s.io
        resources:
          - ingresses
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - networking.k8s.io
        resources:
          - ingresses/finalizers
        verbs:
          - update
      - apiGroups:
          - gateway.networking.k8s.io
        resources:
          - gateways
          - httproutes
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - gateway.networking.k8s.io
        resources:
          - gateways/finalizers
          - httproutes/finalizers
        verbs:
          - update
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
          - patch
  17: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-issuers
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-cert-manager-controller-issuers
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-cert-manager
        namespace: NAMESPACE
  18: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-clusterissuers
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-cert-manager-controller-clusterissuers
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-cert-manager
        namespace: NAMESPACE
  19: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-certificates
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-cert-manager-controller-certificates
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-cert-manager
        namespace: NAMESPACE
  20: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-orders
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-cert-manager-controller-orders
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-cert-manager
        namespace: NAMESPACE
  21: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-challenges
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-cert-manager-controller-challenges
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-cert-manager
        namespace: NAMESPACE
  22: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-ingress-shim
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-cert-manager-controller-ingress-shim
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-cert-manager
        namespace: NAMESPACE
  23: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
        rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true"
      name: RELEASE-NAME-cert-manager-cluster-view
    rules:
      - apiGroups:
          - cert-manager.io
        resources:
          - clusterissuers
        verbs:
          - get
          - list
          - watch
  24: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
        rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true"
        rbac.authorization.k8s.io/aggregate-to-edit: "true"
        rbac.authorization.k8s.io/aggregate-to-view: "true"
      name: RELEASE-NAME-cert-manager-view
    rules:
      - apiGroups:
          - cert-manager.io
        resources:
          - certificates
          - certificaterequests
          - issuers
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - acme.cert-manager.io
        resources:
          - challenges
          - orders
        verbs:
          - get
          - list
          - watch
  25: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
        rbac.authorization.k8s.io/aggregate-to-edit: "true"
      name: RELEASE-NAME-cert-manager-edit
    rules:
      - apiGroups:
          - cert-manager.io
        resources:
          - certificates
          - certificaterequests
          - issuers
        verbs:
          - create
          - delete
          - deletecollection
          - patch
          - update
      - apiGroups:
          - cert-manager.io
        resources:
          - certificates/status
        verbs:
          - update
      - apiGroups:
          - acme.cert-manager.io
        resources:
          - challenges
          - orders
        verbs:
          - create
          - delete
          - deletecollection
          - patch
          - update
  26: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: cert-manager
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-approve:cert-manager-io
    rules:
      - apiGroups:
          - cert-manager.io
        resourceNames:
          - issuers.cert-manager.io/*
          - clusterissuers.cert-manager.io/*
        resources:
          - signers
        verbs:
          - approve
  27: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: cert-manager
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-approve:cert-manager-io
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-cert-manager-controller-approve:cert-manager-io
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-cert-manager
        namespace: NAMESPACE
  28: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: cert-manager
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-certificatesigningrequests
    rules:
      - apiGroups:
          - certificates.k8s.io
        resources:
          - certificatesigningrequests
        verbs:
          - get
          - list
          - watch
          - update
      - apiGroups:
          - certificates.k8s.io
        resources:
          - certificatesigningrequests/status
        verbs:
          - update
          - patch
      - apiGroups:
          - certificates.k8s.io
        resourceNames:
          - issuers.cert-manager.io/*
          - clusterissuers.cert-manager.io/*
        resources:
          - signers
        verbs:
          - sign
      - apiGroups:
          - authorization.k8s.io
        resources:
          - subjectaccessreviews
        verbs:
          - create
  29: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: cert-manager
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-controller-certificatesigningrequests
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-cert-manager-controller-certificatesigningrequests
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-cert-manager
        namespace: NAMESPACE
  30: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager
      namespace: NAMESPACE
    spec:
      ports:
        - name: tcp-prometheus-servicemonitor
          port: 9402
          protocol: TCP
          targetPort: 9402
      selector:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: cert-manager
      type: ClusterIP
  31: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager
      namespace: NAMESPACE
  32: |
    apiVersion: batch/v1
    kind: Job
    metadata:
      annotations:
        helm.sh/hook: post-install
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "1"
      labels:
        app: startupapicheck
        app.kubernetes.io/component: startupapicheck
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: startupapicheck
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-startupapicheck
      namespace: NAMESPACE
    spec:
      backoffLimit: 4
      template:
        metadata:
          labels:
            app: startupapicheck
            app.kubernetes.io/component: startupapicheck
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: startupapicheck
            app.kubernetes.io/version: v1.15.0
            helm.sh/chart: cert-manager-1.2.3
        spec:
          containers:
            - args:
                - check
                - api
                - --wait=1m
                - -v
              image: quay.io/jetstack/cert-manager-startupapicheck:v1.15.0
              imagePullPolicy: IfNotPresent
              name: cert-manager-startupapicheck
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
          enableServiceLinks: false
          nodeSelector:
            kubernetes.io/os: linux
          restartPolicy: OnFailure
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: RELEASE-NAME-cert-manager-startupapicheck
  33: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      annotations:
        helm.sh/hook: post-install
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "-5"
      labels:
        app: startupapicheck
        app.kubernetes.io/component: startupapicheck
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: startupapicheck
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-startupapicheck:create-cert
      namespace: NAMESPACE
    rules:
      - apiGroups:
          - cert-manager.io
        resources:
          - certificates
        verbs:
          - create
  34: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      annotations:
        helm.sh/hook: post-install
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "-5"
      labels:
        app: startupapicheck
        app.kubernetes.io/component: startupapicheck
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: startupapicheck
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-startupapicheck:create-cert
      namespace: NAMESPACE
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: RELEASE-NAME-cert-manager-startupapicheck:create-cert
    subjects:
      - kind: ServiceAccount
        name: RELEASE-NAME-cert-manager-startupapicheck
        namespace: NAMESPACE
  35: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      annotations:
        helm.sh/hook: post-install
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "-5"
      labels:
        app: startupapicheck
        app.kubernetes.io/component: startupapicheck
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: startupapicheck
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-startupapicheck
      namespace: NAMESPACE
  36: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: webhook
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-webhook
      namespace: NAMESPACE
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/component: webhook
          app.kubernetes.io/instance: RELEASE-NAME
          app.kubernetes.io/name: webhook
      template:
        metadata:
          labels:
            app: webhook
            app.kubernetes.io/component: webhook
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/managed-by: Helm
            app.kubernetes.io/name: webhook
            app.kubernetes.io/version: v1.15.0
            helm.sh/chart: cert-manager-1.2.3
        spec:
          containers:
            - args:
                - --v=2
                - --secure-port=10250
                - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
                - --dynamic-serving-ca-secret-name=RELEASE-NAME-cert-manager-webhook-ca
                - --dynamic-serving-dns-names=RELEASE-NAME-cert-manager-webhook
                - --dynamic-serving-dns-names=RELEASE-NAME-cert-manager-webhook.$(POD_NAMESPACE)
                - --dynamic-serving-dns-names=RELEASE-NAME-cert-manager-webhook.$(POD_NAMESPACE).svc
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              image: quay.io/jetstack/cert-manager-webhook:v1.15.0
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /livez
                  port: 6080
                  scheme: HTTP
                initialDelaySeconds: 60
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 1
              name: cert-manager-webhook
              ports:
                - containerPort: 10250
                  name: https
                  protocol: TCP
                - containerPort: 6080
                  name: healthcheck
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /healthz
                  port: 6080
                  scheme: HTTP
                initialDelaySeconds: 5
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 1
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                readOnlyRootFilesystem: true
          enableServiceLinks: false
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: RELEASE-NAME-cert-manager-webhook
  37: |
    apiVersion: admissionregistration.k8s.io/v1
    kind: MutatingWebhookConfiguration
    metadata:
      annotations:
        cert-manager.io/inject-ca-from-secret: NAMESPACE/RELEASE-NAME-cert-manager-webhook-ca
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: webhook
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-webhook
    webhooks:
      - admissionReviewVersions:
          - v1
        clientConfig:
          service:
            name: RELEASE-NAME-cert-manager-webhook
            namespace: NAMESPACE
            path: /mutate
        failurePolicy: Fail
        matchPolicy: Equivalent
        name: webhook.cert-manager.io
        rules:
          - apiGroups:
              - cert-manager.io
            apiVersions:
              - v1
            operations:
              - CREATE
            resources:
              - certificaterequests
        sideEffects: None
        timeoutSeconds: 30
  38: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: webhook
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-webhook:dynamic-serving
      namespace: NAMESPACE
    rules:
      - apiGroups:
          - ""
        resourceNames:
          - RELEASE-NAME-cert-manager-webhook-ca
        resources:
          - secrets
        verbs:
          - get
          - list
          - watch
          - update
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - create
  39: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: webhook
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-webhook:dynamic-serving
      namespace: NAMESPACE
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: Role
      name: RELEASE-NAME-cert-manager-webhook:dynamic-serving
    subjects:
      - apiGroup: ""
        kind: ServiceAccount
        name: RELEASE-NAME-cert-manager-webhook
        namespace: NAMESPACE
  40: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: webhook
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-webhook:subjectaccessreviews
    rules:
      - apiGroups:
          - authorization.k8s.io
        resources:
          - subjectaccessreviews
        verbs:
          - create
  41: |
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: webhook
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-webhook:subjectaccessreviews
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: RELEASE-NAME-cert-manager-webhook:subjectaccessreviews
    subjects:
      - apiGroup: ""
        kind: ServiceAccount
        name: RELEASE-NAME-cert-manager-webhook
        namespace: NAMESPACE
  42: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: webhook
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-webhook
      namespace: NAMESPACE
    spec:
      ports:
        - name: https
          port: 443
          protocol: TCP
          targetPort: https
      selector:
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/name: webhook
      type: ClusterIP
  43: |
    apiVersion: v1
    automountServiceAccountToken: true
    kind: ServiceAccount
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: webhook
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-webhook
      namespace: NAMESPACE
  44: |
    apiVersion: admissionregistration.k8s.io/v1
    kind: ValidatingWebhookConfiguration
    metadata:
      annotations:
        cert-manager.io/inject-ca-from-secret: NAMESPACE/RELEASE-NAME-cert-manager-webhook-ca
      labels:
        app: webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: RELEASE-NAME
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: webhook
        app.kubernetes.io/version: v1.15.0
        helm.sh/chart: cert-manager-1.2.3
      name: RELEASE-NAME-cert-manager-webhook
    webhooks:
      - admissionReviewVersions:
          - v1
        clientConfig:
          service:
            name: RELEASE-NAME-cert-manager-webhook
            namespace: NAMESPACE
            path: /validate
        failurePolicy: Fail
        matchPolicy: Equivalent
        name: webhook.cert-manager.io
        namespaceSelector:
          matchExpressions:
            - key: cert-manager.io/disable-validation
              operator: NotIn
              values:
                - "true"
        rules:
          - apiGroups:
              - cert-manager.io
              - acme.cert-manager.io
            apiVersions:
              - v1
            operations:
              - CREATE
              - UPDATE
            resources:
              - '*/*'
        sideEffects: None
        timeoutSeconds: 30
  45: |
    raw: |
      -----
      Platform release "RELEASE-NAME" installed in namespace "NAMESPACE"

      Documentation can be found here: https://docs.example.com/
      -----
  46: |
    raw: |
      1. Get the application URL by running these commands:
        export POD_NAME=$(kubectl get pods --namespace NAMESPACE -l "app=child-chart,release=RELEASE-NAME" -o jsonpath="{.items[0].metadata.name}")
        echo "Visit http://127.0.0.1:8080 to use your application"
        kubectl port-forward $POD_NAME 8080:80
  47: |
    apiVersion: example
    kind: ChildChart
  48: |
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      labels:
        app: child-chart
        chart: child-chart-1.2.3
        heritage: Helm
        release: RELEASE-NAME
      name: RELEASE-NAME-child-chart
      namespace: RELEASE-NAME
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: child-chart
            release: RELEASE-NAME
        spec:
          containers:
            - image: nginx:stable
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /
                  port: 80
              name: child-chart-nginx
              ports:
                - containerPort: 80
              readinessProbe:
                httpGet:
                  path: /
                  port: 80
              resources: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - all
                privileged: false
                readOnlyRootFilesystem: false
                runAsNonRoot: true
  49: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: child-chart
        chart: child-chart-1.2.3
        heritage: Helm
        release: RELEASE-NAME
      name: RELEASE-NAME-child-chart
    spec:
      ports:
        - name: nginx
          port: 80
          protocol: TCP
          targetPort: 80
      selector:
        app: child-chart
        release: RELEASE-NAME
      type: ClusterIP
  50: |
    raw: |
      PostgreSQL can be accessed via port 5432 on the following DNS name from within your cluster:
      RELEASE-NAME-postgresql.NAMESPACE.svc.cluster.local

      To get your user password run:

          PGPASSWORD=$(kubectl get secret --namespace NAMESPACE RELEASE-NAME-postgresql -o jsonpath="{.data.postgres-password}" | base64 --decode; echo)

      To connect to your database run the following command (using the env variable from above):

         kubectl run RELEASE-NAME-postgresql-client --rm --tty -i --image postgres \
         --env "PGPASSWORD=$PGPASSWORD" \
         --command -- psql -U postgres \
         -h RELEASE-NAME-postgresql postgres



      To connect to your database directly from outside the K8s cluster:
           PGHOST=127.0.0.1
           PGPORT=5432

           # Execute the following commands to route the connection:
           export POD_NAME=$(kubectl get pods --namespace NAMESPACE -l "app=RELEASE-NAME-postgresql" -o jsonpath="{.items[0].metadata.name}")
           kubectl port-forward $POD_NAME 5432:5432
  51: |
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      labels:
        app: RELEASE-NAME-postgresql
        chart: postgresql-1.2.3
        heritage: Helm
        release: RELEASE-NAME
      name: RELEASE-NAME-postgresql
    spec:
      template:
        metadata:
          labels:
            app: RELEASE-NAME-postgresql
        spec:
          containers:
            - env:
                - name: POSTGRES_USER
                  value: postgres
                - name: PGUSER
                  value: postgres
                - name: POSTGRES_DB
                  value: ""
                - name: POSTGRES_INITDB_ARGS
                  value: ""
                - name: PGDATA
                  value: /var/lib/postgresql/data/pgdata
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: postgres-password
                      name: RELEASE-NAME-postgresql
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
              image: postgres:9.6.2
              imagePullPolicy: ""
              livenessProbe:
                exec:
                  command:
                    - sh
                    - -c
                    - exec pg_isready --host $POD_IP
                failureThreshold: 6
                initialDelaySeconds: 60
                timeoutSeconds: 5
              name: RELEASE-NAME-postgresql
              ports:
                - containerPort: 5432
                  name: postgresql
              readinessProbe:
                exec:
                  command:
                    - sh
                    - -c
                    - exec pg_isready --host $POD_IP
                initialDelaySeconds: 5
                periodSeconds: 5
                timeoutSeconds: 3
              resources:
                requests:
                  cpu: 100m
                  memory: 256Mi
              volumeMounts:
                - mountPath: /var/lib/postgresql/data/pgdata
                  name: data
                  subPath: postgresql-db
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: RELEASE-NAME-postgresql
  52: |
    apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: RELEASE-NAME-postgresql
        chart: postgresql-1.2.3
        heritage: Helm
        release: RELEASE-NAME
      name: RELEASE-NAME-postgresql
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 8Gi
  53: |
    apiVersion: v1
    data:
      postgres-password: cGFzc3dvcmQ=
    kind: Secret
    metadata:
      labels:
        app: RELEASE-NAME-postgresql
        chart: postgresql-1.2.3
        heritage: Helm
        release: RELEASE-NAME
      name: RELEASE-NAME-postgresql
    type: Opaque
  54: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: RELEASE-NAME-postgresql
        chart: postgresql-1.2.3
        heritage: Helm
        release: RELEASE-NAME
      name: RELEASE-NAME-postgresql
    spec:
      ports:
        - name: postgresql
          port: 5432
          targetPort: postgresql
      selector:
        app: RELEASE-NAME-postgresql
      type: ClusterIP
  55: |
    raw: |
      1. Get the application URL by running these commands:
        export POD_NAME=$(kubectl get pods --namespace NAMESPACE -l "app=with-subchart,release=RELEASE-NAME" -o jsonpath="{.items[0].metadata.name}")
        echo "Visit http://127.0.0.1:8080 to use your application"
        kubectl port-forward $POD_NAME 8080:80
  56: |
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      labels:
        app: with-subchart
        chart: with-subchart-1.2.3
        heritage: Helm
        release: RELEASE-NAME
      name: RELEASE-NAME-with-subchart
      namespace: RELEASE-NAME
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            app: with-subchart
            release: RELEASE-NAME
        spec:
          containers:
            - image: nginx:stable
              imagePullPolicy: IfNotPresent
              livenessProbe:
                httpGet:
                  path: /
                  port: 80
              name: with-subchart
              ports:
                - containerPort: 80
              readinessProbe:
                httpGet:
                  path: /
                  port: 80
              resources: {}
  57: |
    apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: with-subchart
        chart: with-subchart-1.2.3
        heritage: Helm
        release: RELEASE-NAME
      name: RELEASE-NAME-with-subchart
    spec:
      ports:
        - name: nginx
          port: 80
          protocol: TCP
          targetPort: 80
      selector:
        app: with-subchart
        release: RELEASE-NAME
      type: ClusterIP
